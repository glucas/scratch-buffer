{
	"version": "https://jsonfeed.org/version/1",
	"title": "*scratch*",
	"icon": "https://micro.blog/glucas/avatar.jpg",
	"home_page_url": "https://scratch-buffer.org/",
	"feed_url": "https://scratch-buffer.org/feed.json",
	"items": [
		
			{
				"id": "http://scratch-buffer.micro.blog/2023/09/12/emacs-and-s.html",
				"title": "Emacs Package: s3ed",
				"content_html": "<p>The <a href=\"https://github.com/mattusifer/s3ed\">s3ed</a> package provides a convenient way to work directly with S3 files from Emacs. It uses the AWS CLI under the hood to provide a couple of commands to browse S3 buckets and edit files as if they were local.</p>\n<p>Here&rsquo;s an example configuration:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-elisp\" data-lang=\"elisp\">(use-package s3ed \n    :if (executable-find <span style=\"color:#e6db74\">&#34;aws&#34;</span>) \n    :bind\n    (<span style=\"color:#e6db74\">&#34;C-c s f&#34;</span> <span style=\"color:#f92672\">.</span> s3ed-find-file) \n    (<span style=\"color:#e6db74\">&#34;C-c s s&#34;</span> <span style=\"color:#f92672\">.</span> s3ed-save-file))\n</code></pre></div><h2 id=\"update-handling-quit-signals\">Update: Handling quit signals</h2>\n<p>After using this package for a bit, I noticed that sometimes I would get into a state where <code>&lt;backspace&gt;</code> in the minibuffer would raise an error. Checking the key binding, I determined this was caused by <code>s3ed</code> and had to do a little digging.</p>\n<p>It turns out the <code>s3ed</code> commands bind their own behavior to <code>&lt;backspace&gt;</code> in the <code>minibuffer-local-map</code>. That binding is removed when the command is done&hellip; but <em>not</em> if you change your mind and use <code>C-g</code> (<code>keyboard-quit</code>) to quit the minibuffer without completing the command. In that situation the key binding remains waiting to cause problems the next time you try to backspace in the minibuffer.</p>\n<p>One way to work around the issue is to handle the <code>quit</code> signal to ensure the key binding is removed. I&rsquo;ve added this to the <code>use-package</code> example above:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-elisp\" data-lang=\"elisp\">:config\n(defun my/s3ed-quit-handler (orig <span style=\"color:#66d9ef\">&amp;rest</span> args)\n  (condition-case <span style=\"color:#66d9ef\">nil</span>\n      (<span style=\"color:#a6e22e\">apply</span> orig args)\n    (quit (<span style=\"color:#a6e22e\">define-key</span> minibuffer-local-map (kbd <span style=\"color:#e6db74\">&#34;&lt;backspace&gt;&#34;</span>) <span style=\"color:#66d9ef\">nil</span>))))\n(advice-add <span style=\"color:#a6e22e\">#&#39;</span>s3ed-find-file :around <span style=\"color:#a6e22e\">#&#39;</span>my/s3ed-quit-handler)\n(advice-add <span style=\"color:#a6e22e\">#&#39;</span>s3ed-save-file :around <span style=\"color:#a6e22e\">#&#39;</span>my/s3ed-quit-handler))\n</code></pre></div><p>With that everything is working great, and <code>s3ed</code> remains a great utility in my Emacs toolbox.</p>\n",
				"content_text": "The [s3ed](https://github.com/mattusifer/s3ed) package provides a convenient way to work directly with S3 files from Emacs. It uses the AWS CLI under the hood to provide a couple of commands to browse S3 buckets and edit files as if they were local.\n\nHere's an example configuration:\n\n```elisp\n(use-package s3ed \n    :if (executable-find \"aws\") \n    :bind\n    (\"C-c s f\" . s3ed-find-file) \n    (\"C-c s s\" . s3ed-save-file))\n```\n\n## Update: Handling quit signals\n\nAfter using this package for a bit, I noticed that sometimes I would get into a state where `<backspace>` in the minibuffer would raise an error. Checking the key binding, I determined this was caused by `s3ed` and had to do a little digging. \n\nIt turns out the `s3ed` commands bind their own behavior to `<backspace>` in the `minibuffer-local-map`. That binding is removed when the command is done... but *not* if you change your mind and use `C-g` (`keyboard-quit`) to quit the minibuffer without completing the command. In that situation the key binding remains waiting to cause problems the next time you try to backspace in the minibuffer.\n\nOne way to work around the issue is to handle the `quit` signal to ensure the key binding is removed. I've added this to the `use-package` example above:\n\n```elisp\n:config\n(defun my/s3ed-quit-handler (orig &rest args)\n  (condition-case nil\n      (apply orig args)\n    (quit (define-key minibuffer-local-map (kbd \"<backspace>\") nil))))\n(advice-add #'s3ed-find-file :around #'my/s3ed-quit-handler)\n(advice-add #'s3ed-save-file :around #'my/s3ed-quit-handler))\n```\n\nWith that everything is working great, and `s3ed` remains a great utility in my Emacs toolbox.\n",
				"date_published": "2023-09-12T18:00:45-04:00",
				"url": "https://scratch-buffer.org/2023/09/12/emacs-and-s.html",
				"tags": ["Emacs","AWS"]
			},
			{
				"id": "http://scratch-buffer.micro.blog/2023/09/09/this-buffer-is.html",
				
				"content_html": "<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-elisp\" data-lang=\"elisp\"><span style=\"color:#75715e\">;; This buffer is for text that is not saved, and for Lisp evaluation.</span>\n<span style=\"color:#75715e\">;; To create a file, visit it with \\\\[find-file] and enter text in its buffer.</span>\n</code></pre></div>",
				"content_text": "```elisp\n;; This buffer is for text that is not saved, and for Lisp evaluation.\n;; To create a file, visit it with \\\\[find-file] and enter text in its buffer.\n```\n",
				"date_published": "2023-09-09T14:33:05-04:00",
				"url": "https://scratch-buffer.org/2023/09/09/this-buffer-is.html",
				"tags": ["Emacs"]
			}
	]
}
